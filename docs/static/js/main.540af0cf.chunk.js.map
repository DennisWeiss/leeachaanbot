{"version":3,"sources":["components/leaderboards/PointsLeaderboard.js","requests/requests.js","components/leaderboards/DonationLeaderboard.js","components/leaderboards/BitsLeaderboard.js","components/Login/LoginButton.js","components/util/LanguageSelector.js","components/Login/UserLoggedInfo.js","components/util/TabPanel.js","components/Administration/BotSettingsPage.js","components/InsufficientPermissions.js","components/LoggedInAsAdministrator.js","components/Administration/DeleteCustomCommandDialog.js","components/Administration/AddCustomCommandDialog.js","components/Administration/EditCustomCommandDialog.js","components/Administration/CustomCommandsPage.js","context/PermissionsContext.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["PointsLeaderboard","state","leaderboard","axios","get","conf","leaderboardEndpoint","then","res","data","setState","t","this","props","className","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","user","key","username","position","style","marginRight","src","profilePicture","width","href","numeral","points","format","React","Component","translate","DonationLeaderboard","donationCurrency","broadcasterChannelName","datas","result","configEndpoint","Object","entries","index","parseInt","amount","BitsLeaderboard","LoginButton","createBrowserHistory","onClick","window","location","clientId","hostUri","icon","faTwitch","size","locales","LanguageSelector","anchorEl","menuOpen","handleLanguageSelect","locale","changeLocale","event","currentTarget","IconButton","handleLangSelectClick","bind","color","toUpperCase","open","onClose","handleMenuClose","MenuItem","UserLoggedInfo","popoverOpen","pointsScore","userId","loggedInUser","id","pointsEndpoint","target","localStorage","removeItem","score","nameSingular","namePlural","openPopover","profile_image_url","Popover","closePopover","anchorOrigin","vertical","horizontal","transformOrigin","display_name","currencyNameSingular","currencyNamePlural","Button","logout","TabPanel","children","value","other","Typography","component","role","hidden","aria-labelledby","Box","p","objEqual","a","b","obj","keys","BotSettingsPage","selectedTab","config","initialConfig","snackbarOpen","changeFieldValue","field","changeCurrencyFieldValue","currency","console","log","changeCurrencyFieldValueNumber","accessToken","securedConfigEndpoint","headers","Authorization","users","excludedUsers","toLowerCase","alreadyExcludedUsers","Set","forEach","has","delete","post","status","Snackbar","autoHideDuration","handleSnackbarClose","message","action","aria-label","Tabs","onChange","handleTabChange","Tab","label","Grid","container","spacing","item","xs","clientSecret","refreshToken","botUsername","botOAuthPassword","min","iterationCycleInMs","pointsPerViewIteration","followerMultiplier","subscriberMultiplier","mode","margin","placeholder","changeExcludedUsers","tokenSeparators","variant","disabled","saveChanges","DeleteCustomCommandDialog","setOpen","queryString","parse","hash","access_token","getItem","setItem","customCommandEndpoint","deleteCustomCommand","customCommandId","reload","Dialog","handleClose","DialogTitle","DialogContent","DialogContentText","DialogActions","handleDelete","defaultCustomCommandState","commandHandles","response","showTwitchHandle","AddCustomCommandDialog","customCommand","commandHandlesValue","modifiedCustomCommand","commandHandle","substr","length","addCustomCommand","openSuccessSnackbar","checked","ContentProps","handleCommandHandlesChange","TextArea","rows","handleResponseChange","handleShowTwitchHandleChange","handleSubmit","EditCustomCommandDialog","prevProps","prevState","snapshot","isEqual","updateCustomCommand","CustomCommandsPage","customCommands","customCommandToEdit","deleteDialogOpen","addDialogOpen","editDialogOpen","setDeleteDialogOpen","setAddDialogOpen","setEditDialogOpen","find","_id","marginBottom","faPlusCircle","join","faCheck","editCustomCommand","faPen","faTrash","createContext","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","toolbar","mixins","drawerPaper","padding","content","flexGrow","multiListItemIcon","minWidth","selectPage","selectedPage","classes","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","subheader","ListItem","button","ListItemIcon","ListItemText","primary","height","version","viewBox","x","y","fill-rule","clip-rule","d","Divider","faRobot","Toolbar","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","PermissionsContext","Consumer","hasAdministrationRights","App","currentUserInfo","catch","err","permissionsEndpoint","hasRights","translations","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.540af0cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, makeStyles, TableHead, TableRow, TableCell, TableBody} from '@material-ui/core'\r\nimport './PointsLeaderboard.scss'\r\nimport {fetchPointsLeadeboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\n\r\n\r\nclass PointsLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchPointsLeadeboard()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({leaderboard: res.data || []})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {t} = this.props\r\n\r\n    // TODO: fetch from API\r\n    const currencyName = 'Dangos'\r\n\r\n    return (\r\n      <div className='pointsLeaderboard' >\r\n        <h2>{t('TITLE')}</h2>\r\n        <Paper className='tablePaper'>\r\n          <Table >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className='positionCell'></TableCell>\r\n                <TableCell>{t('USER')}</TableCell>\r\n                <TableCell align='right'>{currencyName}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.leaderboard.map(user => (\r\n                <TableRow key={user.username}>\r\n                  <TableCell className='positionCell'>\r\n                    {user.position}.\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className='userEntry'>\r\n                      <img style={{marginRight: 10}} src={user.profilePicture} width={32} />\r\n                      <a href={`https://twitch.tv/${user.username}`}>{user.username}</a>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    {numeral(user.points).format()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('PointsLeaderboard')(PointsLeaderboard)","import axios from 'axios'\r\nimport conf from '../conf/conf'\r\n\r\n\r\nconst fetchPointsLeadeboard = () => axios.get(`${conf.leaderboardEndpoint}/points`)\r\n\r\nconst fetchDonationLeaderboard = broadcasterChannelName =>\r\n  axios.get(`https://www.tipeeestream.com/v2.0/users/${broadcasterChannelName}/leaderboard?start=1970-01-01`)\r\n\r\nconst fetchBitsLeaderboard = () => axios.get(`${conf.leaderboardEndpoint}/bits`)\r\n\r\nconst fetchConfig = () => axios.get(`${conf.configEndpoint}/current`)\r\n\r\nconst currentUserInfo = accessToken => axios.get('https://api.twitch.tv/helix/users', {\r\n  headers: {\r\n    Authorization: `Bearer ${accessToken}`\r\n  }\r\n})\r\n\r\nconst getAllCustomCommands = () => axios.get(`${conf.customCommandEndpoint}/all`)\r\n\r\nconst deleteCustomCommand = (id, accessToken) => axios.delete(`${conf.customCommandEndpoint}/delete/${id}`, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst addCustomCommand = (customCommand, accessToken) => axios.post(`${conf.customCommandEndpoint}/add`, customCommand, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst updateCustomCommand = (customCommand, accessToken) => axios.post(`${conf.customCommandEndpoint}/update`, customCommand, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst hasAdministrationRights = accessToken => axios.post(`${conf.permissionsEndpoint}/administration`, null, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst fetchPointsScore = userId => axios.get(`${conf.pointsEndpoint}/user/${userId}`)\r\n\r\nconst fetchSecuredConfig = accessToken => axios.get(`${conf.securedConfigEndpoint}/current`, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst updateSecuredConfig = (config, accessToken) => axios.post(`${conf.securedConfigEndpoint}/update`, config, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst deleteUser = (username, accessToken) => axios.delete(`${conf.leaderboardEndpoint}/deleteuser/${username}`, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nexport {\r\n  fetchPointsLeadeboard,\r\n  fetchDonationLeaderboard,\r\n  fetchBitsLeaderboard,\r\n  fetchConfig,\r\n  currentUserInfo,\r\n  getAllCustomCommands,\r\n  deleteCustomCommand,\r\n  addCustomCommand,\r\n  updateCustomCommand,\r\n  hasAdministrationRights,\r\n  fetchPointsScore,\r\n  fetchSecuredConfig,\r\n  updateSecuredConfig,\r\n  deleteUser\r\n}","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core'\r\nimport {fetchConfig, fetchDonationLeaderboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\nimport './DonationLeaderboard.scss'\r\n\r\nclass DonationLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: {},\r\n    donationCurrency: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchDonationLeaderboard('leeachaan')\r\n      .then(res => {\r\n        if (res.data && res.data.datas && res.data.datas.result) {\r\n          this.setState({leaderboard: res.data.datas.result})\r\n        }\r\n      })\r\n    fetchConfig()\r\n      .then(res => {\r\n        this.setState({donationCurrency: res.data.donationCurrency})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return <div className='donationLeaderboard'>\r\n      <h2>{t('TITLE')}</h2>\r\n      <Paper className='tablePaper'>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className='positionCell'></TableCell>\r\n              <TableCell>{t('USER')}</TableCell>\r\n              <TableCell align='right'>{t('DONATION_AMOUNT')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.entries(this.state.leaderboard).map(([index, user]) => (\r\n              <TableRow key={user.username}>\r\n                <TableCell className='positionCell'>\r\n                  {parseInt(index) + 1}.\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className='userEntry'>\r\n                    {user.username}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  {numeral(user.amount).format('0,000.00')} {this.state.donationCurrency}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default translate('DonationLeaderboard')(DonationLeaderboard)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core'\r\nimport {fetchBitsLeaderboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\nimport './BitsLeaderboard.scss'\r\n\r\n\r\nclass BitsLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchBitsLeaderboard()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({leaderboard: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return <div className='bitsLeaderboard'>\r\n      <h2>{t('TITLE')}</h2>\r\n      <Paper className='tablePaper'>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className='positionCell'></TableCell>\r\n              <TableCell>{t('USER')}</TableCell>\r\n              <TableCell align='right'>{t('BITS')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.leaderboard.map(user => (\r\n              <TableRow key={user.username}>\r\n                <TableCell className='positionCell'>\r\n                  {user.position}.\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className='userEntry'>\r\n                    <img style={{marginRight: 10}} src={user.profilePicture} width={32} />\r\n                    <a href={`https://twitch.tv/${user.username}`}>{user.username}</a>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  {numeral(user.points).format()}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default translate('BitsLeaderboard')(BitsLeaderboard)","import React from 'react'\r\nimport './LoginButton.scss'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTwitch} from '@fortawesome/free-brands-svg-icons'\r\nimport {createBrowserHistory} from 'history'\r\nimport conf from '../../conf/conf'\r\n\r\n\r\nconst history = createBrowserHistory()\r\n\r\nclass LoginButton extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='twitchLoginButton' onClick={() =>\r\n        window.location = `https://id.twitch.tv/oauth2/authorize?client_id=${conf.clientId}&redirect_uri=${conf.hostUri}&response_type=token`\r\n      }>\r\n        <FontAwesomeIcon icon={faTwitch} size='lg'/>\r\n        <span className='loginText'>Login with Twitch</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginButton","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {IconButton, Menu, MenuItem} from '@material-ui/core'\r\nimport LanguageIcon from '@material-ui/icons/Language'\r\nimport './LanguageSelector.scss'\r\n\r\n\r\nconst locales = ['en', 'de']\r\n\r\nclass LanguageSelector extends React.Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n    menuOpen: false\r\n  }\r\n\r\n  handleLangSelectClick(event) {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      menuOpen: true\r\n    })\r\n  }\r\n\r\n  handleMenuClose() {\r\n    this.setState({menuOpen: false})\r\n  }\r\n\r\n  handleLanguageSelect = locale => () => {\r\n    this.props.changeLocale(locale)\r\n    this.setState({menuOpen: false})\r\n  }\r\n\r\n  render() {\r\n    const {t, locale, changeLocale} = this.props\r\n    return <>\r\n      <div className='languageSelector'>\r\n        <div>\r\n          <IconButton onClick={this.handleLangSelectClick.bind(this)}>\r\n            <LanguageIcon color='white' className='languageIcon'/>\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n          {locale.toUpperCase()}\r\n        </div>\r\n      </div>\r\n      <Menu\r\n        anchorEl={this.state.anchorEl}\r\n        open={this.state.menuOpen}\r\n        onClose={this.handleMenuClose.bind(this)}\r\n      >\r\n        {locales.map(locale => <MenuItem onClick={this.handleLanguageSelect(locale).bind(this)}>\r\n          {locale.toUpperCase()} - {t(`${locale.toUpperCase()}_LONG`)}\r\n        </MenuItem>)}\r\n      </Menu>\r\n    </>\r\n  }\r\n}\r\n\r\nexport default translate('LanguageSelector')(LanguageSelector)","import React from 'react'\r\nimport './UserLoggedInfo.scss'\r\nimport {Popover} from '@material-ui/core'\r\nimport {fetchPointsScore} from '../../requests/requests'\r\nimport {Button} from '@material-ui/core'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport {translate} from 'react-translate'\r\nimport numeral from 'numeral'\r\nimport conf from '../../conf/conf'\r\nimport LanguageSelector from '../util/LanguageSelector'\r\n\r\n\r\nconst formatPoints = (score, nameSingular, namePlural) => `${numeral(score).format()} ${score === 1 ? nameSingular : namePlural}`\r\n\r\nclass UserLoggedInfo extends React.Component {\r\n\r\n  state = {\r\n    popoverOpen: false,\r\n    anchorEl: null,\r\n    pointsScore: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchPointsScore(this.props.loggedInUser.id)\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({pointsScore: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n  openPopover(event) {\r\n    this.setState({\r\n      popoverOpen: true,\r\n      anchorEl: event.target\r\n    })\r\n  }\r\n\r\n  closePopover() {\r\n    this.setState({popoverOpen: false})\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('accessToken')\r\n    window.location = conf.hostUri\r\n  }\r\n\r\n  render() {\r\n    const {t, loggedInUser} = this.props\r\n\r\n    if (!loggedInUser) {\r\n      return <div/>\r\n    }\r\n    return (\r\n      <>\r\n        <div className='userLoggedInfo' onClick={this.openPopover.bind(this)}>\r\n          <img src={loggedInUser.profile_image_url} width={32} className='profileImage'/>\r\n        </div>\r\n        <Popover\r\n          open={this.state.popoverOpen}\r\n          onClose={this.closePopover.bind(this)}\r\n          anchorEl={this.state.anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <div className='userLoggedInfoExpanded'>\r\n            <img src={loggedInUser.profile_image_url} width={45} className='profileImage'/>\r\n            {loggedInUser.display_name}\r\n          </div>\r\n          <div className='pointsScoreDisplay'>\r\n            {this.state.pointsScore && <div>{formatPoints(\r\n              this.state.pointsScore.points,\r\n              this.state.pointsScore.currencyNameSingular,\r\n              this.state.pointsScore.currencyNamePlural\r\n            )}</div>}\r\n          </div>\r\n          <div className='logoutButton'>\r\n            <Button onClick={this.logout.bind(this)}>\r\n              <ExitToAppIcon/>\r\n              {t('LOGOUT')}\r\n            </Button>\r\n          </div>\r\n        </Popover>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('UserLoggedInfo')(UserLoggedInfo)","import React from 'react'\r\nimport {Typography, Box} from '@material-ui/core'\r\n\r\nconst TabPanel = props => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default TabPanel","import React from 'react'\r\nimport {Button, Paper, Tabs, Tab, Grid, IconButton, Snackbar} from '@material-ui/core'\r\nimport {Input, InputNumber, Select} from 'antd'\r\nimport {translate} from 'react-translate'\r\nimport TabPanel from '../util/TabPanel'\r\nimport './BotSettingsPage.scss'\r\nimport {deleteUser, fetchSecuredConfig, updateSecuredConfig} from '../../requests/requests'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\n\r\nconst objEqual = (a, b) => {\r\n  for (const obj of [a, b]) {\r\n    for (const key of Object.keys(obj)) {\r\n      if (typeof a[key] === 'object') {\r\n        if (typeof b[key] === 'object') {\r\n          if (!objEqual(a[key], b[key])) {\r\n            return false\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        if (a[key] !== b[key]) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n\r\nclass BotSettingsPage extends React.Component {\r\n\r\n  state = {\r\n    selectedTab: 0,\r\n    config: {},\r\n    initialConfig: {},\r\n    snackbarOpen: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchSecuredConfig(this.props.accessToken)\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({\r\n            config: {...res.data},\r\n            initialConfig: {...res.data}\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleTabChange(event, selectedTab) {\r\n    this.setState({selectedTab})\r\n  }\r\n\r\n  changeFieldValue = field => event => {\r\n    const config = {...this.state.config}\r\n    config[field] = event.target.value\r\n    this.setState({config})\r\n  }\r\n\r\n  changeCurrencyFieldValue = field => event => {\r\n    const config = {...this.state.config}\r\n    const currency = {...config.currency}\r\n    currency[field] = event.target.value\r\n    config.currency = currency\r\n    this.setState({config}, () => console.log(this.state))\r\n  }\r\n\r\n  changeCurrencyFieldValueNumber = field => value => {\r\n    const config = {...this.state.config}\r\n    const currency = {...config.currency}\r\n    currency[field] = value\r\n    config.currency = currency\r\n    this.setState({config})\r\n  }\r\n\r\n  changeExcludedUsers(users) {\r\n    const config = {...this.state.config}\r\n    config.excludedUsers = users.map(user => user.toLowerCase())\r\n    this.setState({config})\r\n  }\r\n\r\n  saveChanges() {\r\n    const alreadyExcludedUsers = new Set(this.state.initialConfig.excludedUsers)\r\n    this.state.config.excludedUsers.forEach(user => {\r\n      if (!alreadyExcludedUsers.has(user)) {\r\n        deleteUser(user, this.props.accessToken).then(res => {})\r\n      }\r\n    })\r\n    updateSecuredConfig(this.state.config, this.props.accessToken)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            snackbarOpen: true,\r\n            config: res.data,\r\n            initialConfig: res.data\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({snackbarOpen: false})\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose.bind(this)}\r\n          message={<span>{t('SAVED_CHANGES_SUCCESSFULLY')}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleSnackbarClose.bind(this)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n        <Paper className='botSettingsPagePaper'>\r\n          <Tabs\r\n            value={this.state.selectedTab}\r\n            onChange={this.handleTabChange.bind(this)}\r\n          >\r\n            <Tab label={t('GENERAL')}/>\r\n            <Tab label={t('CURRENCY')}/>\r\n            <Tab label={t('USERS')}/>\r\n          </Tabs>\r\n          <TabPanel value={this.state.selectedTab} index={0}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                {t('CLIENT_ID')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.clientId} onChange={this.changeFieldValue('clientId').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('CLIENT_SECRET')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.clientSecret}\r\n                       onChange={this.changeFieldValue('clientSecret').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('ACCESS_TOKEN')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.accessToken}\r\n                       onChange={this.changeFieldValue('accessToken').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('REFRESH_TOKEN')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.refreshToken}\r\n                       onChange={this.changeFieldValue('refreshToken').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('BROADCASTER_CHANNEL_NAME')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.broadcasterChannelName}\r\n                       onChange={this.changeFieldValue('broadcasterChannelName').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('BOT_USERNAME')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.botUsername}\r\n                       onChange={this.changeFieldValue('botUsername').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('BOT_OAUTH_PASSWORD')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.botOAuthPassword}\r\n                       onChange={this.changeFieldValue('botOAuthPassword').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('DONATION_CURRENCY')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.donationCurrency}\r\n                       onChange={this.changeFieldValue('donationCurrency').bind(this)}/>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={1}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                {t('CURRENCY_NAME_SINGULAR')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.currency && this.state.config.currency.nameSingular}\r\n                       onChange={this.changeCurrencyFieldValue('nameSingular').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('CURRENCY_NAME_PLURAL')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Input value={this.state.config.currency && this.state.config.currency.namePlural}\r\n                       onChange={this.changeCurrencyFieldValue('namePlural').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('ITERATION_CYCLE')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <InputNumber min={1} value={this.state.config.currency && this.state.config.currency.iterationCycleInMs}\r\n                             onChange={this.changeCurrencyFieldValueNumber('iterationCycleInMs').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('POINTS_PER_VIEW_ITERATION')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <InputNumber min={1}\r\n                             value={this.state.config.currency && this.state.config.currency.pointsPerViewIteration}\r\n                             onChange={this.changeCurrencyFieldValueNumber('pointsPerViewIteration').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('FOLLOWER_MULTIPLIER')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <InputNumber min={1} value={this.state.config.currency && this.state.config.currency.followerMultiplier}\r\n                             onChange={this.changeCurrencyFieldValueNumber('followerMultiplier').bind(this)}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {t('SUBSCRIBER_MULTIPLIER')}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <InputNumber min={1}\r\n                             value={this.state.config.currency && this.state.config.currency.subscriberMultiplier}\r\n                             onChange={this.changeCurrencyFieldValueNumber('subscriberMultiplier').bind(this)}/>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel value={this.state.selectedTab} index={2}>\r\n            <div>\r\n              {t('EXCLUDED_USERS')}\r\n            </div>\r\n            <Select\r\n              mode='tags'\r\n              style={{width: '100%', margin: '6px 0'}}\r\n              placeholder={t('EXCLUDED_USERS')}\r\n              onChange={this.changeExcludedUsers.bind(this)}\r\n              tokenSeparators={[',', ' ']}\r\n              value={this.state.config.excludedUsers}\r\n            />\r\n          </TabPanel>\r\n        </Paper>\r\n        <Paper className='botSettingsPageSaveButtonPaper'>\r\n            <Button\r\n              color='primary'\r\n              variant='contained'\r\n              className='botSettingsSaveButton'\r\n              disabled={objEqual(this.state.config, this.state.initialConfig)}\r\n              onClick={this.saveChanges.bind(this)}\r\n            >\r\n              {t('SAVE_CHANGES')}\r\n            </Button>\r\n        </Paper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('BotSettingsPage')(BotSettingsPage)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\n\r\n\r\nconst InsufficientPermission = ({t}) => (\r\n  <div>\r\n    {t('INSUFFICIENT_PERMISSIONS')}\r\n  </div>\r\n)\r\n\r\nexport default translate('InsufficientPermissions')(InsufficientPermission)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\n\r\n\r\nconst LoggedInAsAdministrator = ({t}) => (\r\n  <div>\r\n    {t('LOGGED_IN_AS_ADMINISTRATOR')}\r\n  </div>\r\n)\r\n\r\nexport default translate('LoggedInAsAdministrator')(LoggedInAsAdministrator)","import React from 'react'\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button} from '@material-ui/core'\r\nimport {translate} from 'react-translate'\r\nimport {deleteCustomCommand} from '../../requests/requests'\r\nimport queryString from 'query-string'\r\n\r\n\r\nclass DeleteCustomCommandDialog extends React.Component {\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleDelete() {\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      deleteCustomCommand(this.props.customCommandId, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.props.setOpen(false)\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={this.handleClose.bind(this)}\r\n      >\r\n        <DialogTitle>{t('TITLE')}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {t('DELETION_WARNING')}\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this)} >{t('CANCEL')}</Button>\r\n            <Button onClick={this.handleDelete.bind(this)} color='secondary'>{t('DELETE')}</Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('DeleteCustomCommandDialog')(DeleteCustomCommandDialog)","import React from 'react'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Snackbar,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport {translate} from 'react-translate'\r\nimport {Select, Input, Checkbox} from 'antd'\r\nimport {addCustomCommand} from '../../requests/requests'\r\nimport queryString from 'query-string'\r\n\r\n\r\nconst defaultCustomCommandState = {\r\n  commandHandles: [],\r\n  response: '',\r\n  showTwitchHandle: true\r\n}\r\n\r\nclass AddCustomCommandDialog extends React.Component {\r\n\r\n  state = {\r\n    customCommand: defaultCustomCommandState,\r\n    snackbarOpen: false\r\n  }\r\n\r\n  handleCommandHandlesChange(commandHandlesValue) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.commandHandles = commandHandlesValue.map(value => value[0] === '!' ? value : '!' + value)\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleSubmit() {\r\n    const modifiedCustomCommand = {...this.state.customCommand}\r\n    modifiedCustomCommand.commandHandles = modifiedCustomCommand.commandHandles.map(\r\n      commandHandle => commandHandle.substr(1, commandHandle.length)\r\n    )\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      addCustomCommand(modifiedCustomCommand, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({customCommand: defaultCustomCommandState})\r\n            this.handleClose()\r\n            this.openSuccessSnackbar()\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  handleResponseChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.response = event.target.value\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleShowTwitchHandleChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.showTwitchHandle = event.target.checked\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({snackbarOpen: false})\r\n  }\r\n\r\n  openSuccessSnackbar() {\r\n    this.setState({snackbarOpen: true})\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose.bind(this)}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span>{t('ADDED_CUSTOM_COMMAND_SUCCESSFULLY')}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleSnackbarClose.bind(this)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose.bind(this)}\r\n        >\r\n          <DialogTitle>{t('TITLE')}</DialogTitle>\r\n          <DialogContent>\r\n            <Select\r\n              mode='tags'\r\n              style={{width: '100%', margin: '6px 0'}}\r\n              placeholder={t('COMMAND_HANDLES')}\r\n              onChange={this.handleCommandHandlesChange.bind(this)}\r\n              tokenSeparators={[',', ' ']}\r\n              value={this.state.customCommand.commandHandles}\r\n            >\r\n            </Select>\r\n            <Input.TextArea\r\n              placeholder={t('RESPONSE')}\r\n              rows={3}\r\n              style={{margin: '6px 0'}}\r\n              onChange={this.handleResponseChange.bind(this)}\r\n            />\r\n            <Checkbox\r\n              checked={this.state.customCommand.showTwitchHandle}\r\n              onChange={this.handleShowTwitchHandleChange.bind(this)}\r\n              style={{margin: '6px 0'}}\r\n            >\r\n              {t('SHOW_TWITCH_HANDLE')}\r\n            </Checkbox>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose.bind(this)}>{t('CANCEL')}</Button>\r\n              <Button onClick={this.handleSubmit.bind(this)} color='primary'>{t('ADD_CUSTOM_COMMAND')}</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('AddCustomCommandDialog')(AddCustomCommandDialog)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {updateCustomCommand} from '../../requests/requests'\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Snackbar} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport {Checkbox, Input, Select} from 'antd'\r\nimport isEqual from 'lodash.isequal'\r\nimport queryString from 'query-string'\r\n\r\n\r\nclass EditCustomCommandDialog extends React.Component {\r\n\r\n  state = {\r\n    customCommand: {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!isEqual(prevProps, this.props) && this.props.customCommand && this.props.customCommand.commandHandles) {\r\n      const customCommand = {...this.props.customCommand}\r\n      customCommand.commandHandles = customCommand.commandHandles.map(commandHandle => '!' + commandHandle)\r\n      this.setState({customCommand})\r\n    }\r\n  }\r\n\r\n  handleCommandHandlesChange(commandHandlesValue) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.commandHandles = commandHandlesValue.map(value => value[0] === '!' ? value : '!' + value)\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleSubmit() {\r\n    const modifiedCustomCommand = {...this.state.customCommand}\r\n    modifiedCustomCommand.commandHandles = modifiedCustomCommand.commandHandles.map(\r\n      commandHandle => commandHandle.substr(1, commandHandle.length)\r\n    )\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      updateCustomCommand(modifiedCustomCommand, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.handleClose()\r\n            this.openSuccessSnackbar()\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  handleResponseChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.response = event.target.value\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleShowTwitchHandleChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.showTwitchHandle = event.target.checked\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({snackbarOpen: false})\r\n  }\r\n\r\n  openSuccessSnackbar() {\r\n    this.setState({snackbarOpen: true})\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose.bind(this)}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span>{t('EDITED_CUSTOM_COMMAND_SUCCESSFULLY')}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleSnackbarClose.bind(this)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose.bind(this)}\r\n        >\r\n          <DialogTitle>{t('TITLE')}</DialogTitle>\r\n          <DialogContent>\r\n            <Select\r\n              mode='tags'\r\n              style={{width: '100%', margin: '6px 0'}}\r\n              placeholder={t('COMMAND_HANDLES')}\r\n              onChange={this.handleCommandHandlesChange.bind(this)}\r\n              tokenSeparators={[',', ' ']}\r\n              value={this.state.customCommand.commandHandles}\r\n            >\r\n            </Select>\r\n            <Input.TextArea\r\n              value={this.state.customCommand.response}\r\n              placeholder={t('RESPONSE')}\r\n              rows={3}\r\n              style={{margin: '6px 0'}}\r\n              onChange={this.handleResponseChange.bind(this)}\r\n            />\r\n            <Checkbox\r\n              checked={this.state.customCommand.showTwitchHandle}\r\n              onChange={this.handleShowTwitchHandleChange.bind(this)}\r\n              style={{margin: '6px 0'}}\r\n            >\r\n              {t('SHOW_TWITCH_HANDLE')}\r\n            </Checkbox>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose.bind(this)}>{t('CANCEL')}</Button>\r\n              <Button onClick={this.handleSubmit.bind(this)} color='primary'>{t('ADD_CUSTOM_COMMAND')}</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('EditCustomCommandDialog')(EditCustomCommandDialog)","import React from 'react'\r\nimport {getAllCustomCommands} from '../../requests/requests'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow, Button} from '@material-ui/core'\r\nimport numeral from 'numeral'\r\nimport {translate} from 'react-translate'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPen, faTrash, faPlusCircle, faCheck} from '@fortawesome/free-solid-svg-icons'\r\nimport './CustomCommandsPage.scss'\r\nimport DeleteCustomCommandDialog from './DeleteCustomCommandDialog'\r\nimport AddCustomCommandDialog from './AddCustomCommandDialog'\r\nimport EditCustomCommandDialog from './EditCustomCommandDialog'\r\n\r\n\r\nclass CustomCommandsPage extends React.Component {\r\n\r\n  state = {\r\n    customCommands: [],\r\n    customCommandToEdit: {},\r\n    deleteDialogOpen: false,\r\n    addDialogOpen: false,\r\n    editDialogOpen: false,\r\n    customCommandId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reload()\r\n  }\r\n\r\n  reload() {\r\n    getAllCustomCommands()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({customCommands: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  editCustomCommand(id) {\r\n    const customCommand = this.state.customCommands.find(customCommand => customCommand._id === id)\r\n    if (customCommand) {\r\n      this.setState({\r\n        customCommandToEdit: customCommand,\r\n        editDialogOpen: true\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteCustomCommand(customCommandId) {\r\n    this.setState({\r\n      deleteDialogOpen: true,\r\n      customCommandId\r\n    })\r\n  }\r\n\r\n  setDeleteDialogOpen = deleteDialogOpen => this.setState({deleteDialogOpen})\r\n\r\n  setAddDialogOpen = addDialogOpen => this.setState({addDialogOpen})\r\n\r\n  setEditDialogOpen = editDialogOpen => this.setState({editDialogOpen})\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return (\r\n      <>\r\n        <AddCustomCommandDialog\r\n          open={this.state.addDialogOpen}\r\n          setOpen={this.setAddDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n        />\r\n        <EditCustomCommandDialog\r\n          customCommand={this.state.customCommandToEdit}\r\n          open={this.state.editDialogOpen}\r\n          setOpen={this.setEditDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n        />\r\n        <DeleteCustomCommandDialog\r\n          open={this.state.deleteDialogOpen}\r\n          setOpen={this.setDeleteDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n          customCommandId={this.state.customCommandId}\r\n        />\r\n        <Button variant='contained' color='primary' style={{marginBottom: 15}}\r\n                onClick={() => this.setAddDialogOpen(true)}>\r\n          <span className='addCustomCommandButtonIcon'><FontAwesomeIcon icon={faPlusCircle}/></span>\r\n          {t('ADD_CUSTOM_COMMAND')}\r\n        </Button>\r\n        <div>\r\n          <Paper>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{t('COMMAND_HANDLES')}</TableCell>\r\n                  <TableCell>{t('RESPONSE')}</TableCell>\r\n                  <TableCell>{t('SHOW_TWITCH_HANDLE')}</TableCell>\r\n                  <TableCell align='right'/>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  this.state.customCommands.map(customCommand => (\r\n                    <TableRow key={customCommand._id}>\r\n                      <TableCell>\r\n                        {customCommand.commandHandles.map(commandHandle => `!${commandHandle}`).join(', ')}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {customCommand.response}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {customCommand.showTwitchHandle &&\r\n                        <span className='showTwitchHandleIcon'><FontAwesomeIcon icon={faCheck}/></span>}\r\n                      </TableCell>\r\n                      <TableCell align='right'>\r\n                        <div className='actionItems'>\r\n                          <div className='editIcon' onClick={() => this.editCustomCommand(customCommand._id)}>\r\n                            <FontAwesomeIcon icon={faPen} size='md'/>\r\n                          </div>\r\n                          <div className='deleteIcon' onClick={() => this.deleteCustomCommand(customCommand._id)}>\r\n                            <FontAwesomeIcon icon={faTrash} size='md'/>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('CustomCommandsPage')(CustomCommandsPage)","import React from 'react'\r\n\r\n\r\nexport default React.createContext()","import React from 'react'\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Toolbar,\r\n  IconButton,\r\n  Divider,\r\n  ListItemIcon,\r\n  Hidden\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\r\nimport {translate} from 'react-translate'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faRobot} from '@fortawesome/free-solid-svg-icons'\r\nimport PointsLeaderboard from './leaderboards/PointsLeaderboard'\r\nimport DonationLeaderboard from './leaderboards/DonationLeaderboard'\r\nimport BitsLeaderboard from './leaderboards/BitsLeaderboard'\r\nimport LoginButton from './Login/LoginButton'\r\nimport UserLoggedInfo from './Login/UserLoggedInfo'\r\nimport BotSettingsPage from './Administration/BotSettingsPage'\r\nimport InsufficientPermission from './InsufficientPermissions'\r\nimport LoggedInAsAdministrator from './LoggedInAsAdministrator'\r\nimport CustomCommandsPage from './Administration/CustomCommandsPage'\r\nimport PermissionsContext from '../context/PermissionsContext'\r\nimport './Page.scss'\r\nimport LanguageSelector from './util/LanguageSelector'\r\n\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    zIndex: 4\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '100%',\r\n    },\r\n    textColor: 'white',\r\n    zIndex: 5\r\n  },\r\n  menuButton: {\r\n    marginRight: 5,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: 10\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  multiListItemIcon: {\r\n    minWidth: 0\r\n  }\r\n}))\r\n\r\nconst Page = ({t, accessToken, selectPage, selectedPage, loggedInUser, locale, changeLocale}) => {\r\n\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false)\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen)\r\n  }\r\n\r\n  const drawer =\r\n    <div>\r\n      <div className={classes.toolbar}/>\r\n      <List subheader={t('LEADERBOARDS')}>\r\n        <ListItem button key='POINTS_LEADERBOARD' onClick={() => selectPage('POINTS_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><StarIcon/></ListItemIcon>\r\n          <ListItemText primary={t('POINTS_LEADERBOARD')}/>\r\n        </ListItem>\r\n        <ListItem button key='DONATION_LEADERBOARD' onClick={() => selectPage('DONATION_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><AttachMoneyIcon/></ListItemIcon>\r\n          <ListItemText primary={t('DONATION_LEADERBOARD')}/>\r\n        </ListItem>\r\n        <ListItem button key='BITS_LEADERBOARD' onClick={() => selectPage('BITS_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}>\r\n            <svg className=\"tw-icon__svg\" width=\"24px\" height=\"24px\" version=\"1.1\" viewBox=\"0 0 20 20\" x=\"0px\"\r\n                 y=\"0px\">\r\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                    d=\"M3 12l7-10 7 10-7 6-7-6zm2.678-.338L10 5.487l4.322 6.173-.85.728L10 11l-3.473 1.39-.849-.729z\"></path>\r\n            </svg>\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('BITS_LEADERBOARD')}/>\r\n        </ListItem>\r\n      </List>\r\n      <Divider/>\r\n      <List subheader={t('ADMINISTRATION')}>\r\n        <ListItem button key='BOT_SETTINGS' onClick={() => selectPage('BOT_SETTINGS')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}>\r\n            <span style={{marginRight: 5}}><FontAwesomeIcon icon={faRobot}/></span>\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('BOT_SETTINGS')}/>\r\n        </ListItem>\r\n        <ListItem button key='CUSTOM_COMMANDS' onClick={() => selectPage('CUSTOM_COMMANDS')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><SettingsIcon/></ListItemIcon>\r\n          <ListItemText primary={t('CUSTOM_COMMANDS')}/>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n\r\n  return (\r\n    <>\r\n      <AppBar position='fixed' className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color='inherit'>\r\n            <MenuIcon onClick={handleDrawerToggle}/>\r\n          </IconButton>\r\n          <span style={{marginRight: 10}}><img src='leea-emote-128.png' width={32}/></span>\r\n          <h3 className='appTitle'>{t('TITLE')}</h3>\r\n          <div className='languageSelectorDiv'>\r\n            <LanguageSelector locale={locale} changeLocale={changeLocale}/>\r\n          </div>\r\n          {!loggedInUser && <LoginButton/>}\r\n          {loggedInUser && <UserLoggedInfo loggedInUser={loggedInUser}/>}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n\r\n        <nav className={classes.drawer}>\r\n          <Hidden smUp implementation='css'>\r\n            <Drawer\r\n              // container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation='css'>\r\n            <Drawer\r\n              open\r\n              variant='permanent'\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}/>\r\n          <PermissionsContext.Consumer>\r\n            {hasAdministrationRights => <>\r\n              {\r\n                selectedPage === 'POINTS_LEADERBOARD' && <PointsLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'DONATION_LEADERBOARD' && <DonationLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'BITS_LEADERBOARD' && <BitsLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && loggedInUser && hasAdministrationRights &&\r\n                <BotSettingsPage accessToken={accessToken}/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && loggedInUser && !hasAdministrationRights && <InsufficientPermission/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && !loggedInUser && <LoggedInAsAdministrator/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && loggedInUser && hasAdministrationRights && <CustomCommandsPage/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && loggedInUser && !hasAdministrationRights &&\r\n                <InsufficientPermission/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && !loggedInUser && <LoggedInAsAdministrator/>\r\n              }\r\n            </>\r\n            }\r\n          </PermissionsContext.Consumer>\r\n        </main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default translate('Page')(Page)","import React from 'react'\nimport './App.scss'\nimport Page from './components/Page'\nimport {TranslatorProvider} from 'react-translate'\nimport translations from './conf/translations'\nimport queryString from 'query-string'\nimport {currentUserInfo, hasAdministrationRights} from './requests/requests'\nimport PermissionsContext from './context/PermissionsContext'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      locale: 'en',\n      selectedPage: 'POINTS_LEADERBOARD',\n      loggedInUser: null,\n      hasAdministrationRights: false\n    }\n  }\n\n  componentDidMount() {\n    const parsed = queryString.parse(window.location.hash)\n    let accessToken = parsed.access_token\n    if (!accessToken) {\n      accessToken = localStorage.getItem('accessToken')\n    }\n    if (accessToken) {\n      localStorage.setItem('accessToken', accessToken)\n      currentUserInfo(accessToken)\n        .then(res => {\n          if (res.data && res.data.data && res.data.data.length > 0) {\n            this.setState({\n              accessToken,\n              loggedInUser: res.data.data[0]\n            })\n          } else {\n            localStorage.removeItem('accessToken')\n          }\n        })\n        .catch(err => localStorage.removeItem('accessToken'))\n\n      hasAdministrationRights(accessToken)\n        .then(res => {\n          if (res.data) {\n            this.setState({\n              accessToken,\n              hasAdministrationRights: res.data.hasRights\n            })\n          }\n        })\n    }\n  }\n\n  selectPage = selectedPage => this.setState({selectedPage})\n\n  changeLocale = locale => this.setState({locale})\n\n  render() {\n    return (\n      <TranslatorProvider translations={translations[this.state.locale]}>\n        <PermissionsContext.Provider value={this.state.hasAdministrationRights}>\n          <Page\n            accessToken={this.state.accessToken}\n            selectedPage={this.state.selectedPage}\n            selectPage={this.selectPage.bind(this)}\n            loggedInUser={this.state.loggedInUser}\n            locale={this.state.locale}\n            changeLocale={this.changeLocale.bind(this)}\n          />\n        </PermissionsContext.Provider>\n      </TranslatorProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}