{"version":3,"sources":["components/leaderboards/PointsLeaderboard.js","requests/requests.js","components/leaderboards/DonationLeaderboard.js","components/leaderboards/BitsLeaderboard.js","components/Login/LoginButton.js","components/Login/UserLoggedInfo.js","components/Administration/BotSettingsPage.js","components/InsufficientPermissions.js","components/LoggedInAsAdministrator.js","components/Administration/DeleteCustomCommandDialog.js","components/Administration/AddCustomCommandDialog.js","components/Administration/EditCustomCommandDialog.js","components/Administration/CustomCommandsPage.js","context/PermissionsContext.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["PointsLeaderboard","state","leaderboard","axios","get","conf","leaderboardEndpoint","then","res","data","setState","t","this","props","className","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","user","key","username","position","style","marginRight","src","profilePicture","width","href","numeral","points","format","React","Component","translate","DonationLeaderboard","donationCurrency","broadcasterChannelName","datas","result","configEndpoint","console","log","Object","entries","index","parseInt","amount","BitsLeaderboard","LoginButton","createBrowserHistory","onClick","window","location","clientId","hostUri","icon","faTwitch","size","UserLoggedInfo","popoverOpen","anchorEl","pointsScore","userId","loggedInUser","id","pointsEndpoint","event","target","localStorage","removeItem","score","nameSingular","namePlural","openPopover","bind","profile_image_url","Popover","open","onClose","closePopover","anchorOrigin","vertical","horizontal","transformOrigin","display_name","currencyNameSingular","currencyNamePlural","Button","logout","BotSettingsPage","DeleteCustomCommandDialog","setOpen","accessToken","queryString","parse","hash","access_token","getItem","setItem","delete","customCommandEndpoint","headers","Authorization","deleteCustomCommand","customCommandId","status","reload","Dialog","handleClose","DialogTitle","DialogContent","DialogContentText","DialogActions","color","handleDelete","AddCustomCommandDialog","customCommand","commandHandles","response","showTwitchHandle","snackbarOpen","commandHandlesValue","value","modifiedCustomCommand","commandHandle","substr","length","post","addCustomCommand","openSuccessSnackbar","checked","Snackbar","autoHideDuration","handleSnackbarClose","ContentProps","message","action","IconButton","aria-label","mode","margin","placeholder","onChange","handleCommandHandlesChange","tokenSeparators","TextArea","rows","handleResponseChange","handleShowTwitchHandleChange","handleSubmit","EditCustomCommandDialog","prevProps","prevState","snapshot","isEqual","updateCustomCommand","CustomCommandsPage","customCommands","customCommandToEdit","deleteDialogOpen","addDialogOpen","editDialogOpen","setDeleteDialogOpen","setAddDialogOpen","setEditDialogOpen","find","_id","variant","marginBottom","faPlusCircle","join","faCheck","editCustomCommand","faPen","faTrash","createContext","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","toolbar","mixins","drawerPaper","padding","content","flexGrow","spacing","multiListItemIcon","minWidth","selectPage","selectedPage","classes","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","subheader","ListItem","button","ListItemIcon","ListItemText","primary","height","version","viewBox","x","y","fill-rule","clip-rule","d","Divider","faRobot","Toolbar","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","PermissionsContext","Consumer","hasAdministrationRights","App","locale","currentUserInfo","catch","err","permissionsEndpoint","hasRights","translations","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d88a8bb.chunk.js","sourcesContent":["import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, makeStyles, TableHead, TableRow, TableCell, TableBody} from '@material-ui/core'\r\nimport './PointsLeaderboard.scss'\r\nimport {fetchPointsLeadeboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\n\r\n\r\nclass PointsLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchPointsLeadeboard()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({leaderboard: res.data || []})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {t} = this.props\r\n\r\n    // TODO: fetch from API\r\n    const currencyName = 'Dangos'\r\n\r\n    return (\r\n      <div className='pointsLeaderboard' >\r\n        <h2>{t('TITLE')}</h2>\r\n        <Paper className='tablePaper'>\r\n          <Table >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className='positionCell'></TableCell>\r\n                <TableCell>{t('USER')}</TableCell>\r\n                <TableCell align='right'>{currencyName}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.leaderboard.map(user => (\r\n                <TableRow key={user.username}>\r\n                  <TableCell className='positionCell'>\r\n                    {user.position}.\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className='userEntry'>\r\n                      <img style={{marginRight: 10}} src={user.profilePicture} width={32} />\r\n                      <a href={`https://twitch.tv/${user.username}`}>{user.username}</a>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    {numeral(user.points).format()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('PointsLeaderboard')(PointsLeaderboard)","import axios from 'axios'\r\nimport conf from '../conf/conf'\r\n\r\n\r\nconst fetchPointsLeadeboard = () => axios.get(`${conf.leaderboardEndpoint}/points`)\r\n\r\nconst fetchDonationLeaderboard = broadcasterChannelName =>\r\n  axios.get(`https://www.tipeeestream.com/v2.0/users/${broadcasterChannelName}/leaderboard?start=1970-01-01`)\r\n\r\nconst fetchBitsLeaderboard = () => axios.get(`${conf.leaderboardEndpoint}/bits`)\r\n\r\nconst fetchConfig = () => axios.get(`${conf.configEndpoint}/current`)\r\n\r\nconst currentUserInfo = accessToken => axios.get('https://api.twitch.tv/helix/users', {\r\n  headers: {\r\n    Authorization: `Bearer ${accessToken}`\r\n  }\r\n})\r\n\r\nconst getAllCustomCommands = () => axios.get(`${conf.customCommandEndpoint}/all`)\r\n\r\nconst deleteCustomCommand = (id, accessToken) => axios.delete(`${conf.customCommandEndpoint}/delete/${id}`, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst addCustomCommand = (customCommand, accessToken) => axios.post(`${conf.customCommandEndpoint}/add`, customCommand, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst updateCustomCommand = (customCommand, accessToken) => axios.post(`${conf.customCommandEndpoint}/update`, customCommand, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst hasAdministrationRights = accessToken => axios.post(`${conf.permissionsEndpoint}/administration`, null, {\r\n  headers: {\r\n    Authorization: accessToken\r\n  }\r\n})\r\n\r\nconst fetchPointsScore = userId => axios.get(`${conf.pointsEndpoint}/user/${userId}`)\r\n\r\nexport {\r\n  fetchPointsLeadeboard,\r\n  fetchDonationLeaderboard,\r\n  fetchBitsLeaderboard,\r\n  fetchConfig,\r\n  currentUserInfo,\r\n  getAllCustomCommands,\r\n  deleteCustomCommand,\r\n  addCustomCommand,\r\n  updateCustomCommand,\r\n  hasAdministrationRights,\r\n  fetchPointsScore\r\n}","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core'\r\nimport {fetchConfig, fetchDonationLeaderboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\nimport './DonationLeaderboard.scss'\r\n\r\nclass DonationLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: {},\r\n    donationCurrency: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchDonationLeaderboard('leeachaan')\r\n      .then(res => {\r\n        if (res.data && res.data.datas && res.data.datas.result) {\r\n          this.setState({leaderboard: res.data.datas.result})\r\n        }\r\n      })\r\n    fetchConfig()\r\n      .then(res => {\r\n        console.log(res.data)\r\n        this.setState({donationCurrency: res.data.donationCurrency})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return <div className='donationLeaderboard'>\r\n      <h2>{t('TITLE')}</h2>\r\n      <Paper className='tablePaper'>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className='positionCell'></TableCell>\r\n              <TableCell>{t('USER')}</TableCell>\r\n              <TableCell align='right'>{t('DONATION_AMOUNT')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.entries(this.state.leaderboard).map(([index, user]) => (\r\n              <TableRow key={user.username}>\r\n                <TableCell className='positionCell'>\r\n                  {parseInt(index) + 1}.\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className='userEntry'>\r\n                    {user.username}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  {numeral(user.amount).format('0,000.00')} {this.state.donationCurrency}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default translate('DonationLeaderboard')(DonationLeaderboard)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core'\r\nimport {fetchBitsLeaderboard} from '../../requests/requests'\r\nimport numeral from 'numeral'\r\nimport './BitsLeaderboard.scss'\r\n\r\n\r\nclass BitsLeaderboard extends React.Component {\r\n\r\n  state = {\r\n    leaderboard: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchBitsLeaderboard()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({leaderboard: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return <div className='bitsLeaderboard'>\r\n      <h2>{t('TITLE')}</h2>\r\n      <Paper className='tablePaper'>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className='positionCell'></TableCell>\r\n              <TableCell>{t('USER')}</TableCell>\r\n              <TableCell align='right'>{t('BITS')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.leaderboard.map(user => (\r\n              <TableRow key={user.username}>\r\n                <TableCell className='positionCell'>\r\n                  {user.position}.\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className='userEntry'>\r\n                    <img style={{marginRight: 10}} src={user.profilePicture} width={32} />\r\n                    <a href={`https://twitch.tv/${user.username}`}>{user.username}</a>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  {numeral(user.points).format()}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default translate('BitsLeaderboard')(BitsLeaderboard)","import React from 'react'\r\nimport './LoginButton.scss'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTwitch} from '@fortawesome/free-brands-svg-icons'\r\nimport {createBrowserHistory} from 'history'\r\nimport conf from '../../conf/conf'\r\n\r\n\r\nconst history = createBrowserHistory()\r\n\r\nclass LoginButton extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='twitchLoginButton' onClick={() =>\r\n        window.location = `https://id.twitch.tv/oauth2/authorize?client_id=${conf.clientId}&redirect_uri=${conf.hostUri}&response_type=token`\r\n      }>\r\n        <FontAwesomeIcon icon={faTwitch} size='lg'/>\r\n        <span className='loginText'>Login with Twitch</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginButton","import React from 'react'\r\nimport './UserLoggedInfo.scss'\r\nimport {Popover} from '@material-ui/core'\r\nimport {fetchPointsScore} from '../../requests/requests'\r\nimport {Button} from '@material-ui/core'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport {translate} from 'react-translate'\r\nimport numeral from 'numeral'\r\nimport conf from '../../conf/conf'\r\n\r\n\r\nconst formatPoints = (score, nameSingular, namePlural) => `${numeral(score).format()} ${score === 1 ? nameSingular : namePlural}`\r\n\r\nclass UserLoggedInfo extends React.Component {\r\n\r\n  state = {\r\n    popoverOpen: false,\r\n    anchorEl: null,\r\n    pointsScore: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchPointsScore(this.props.loggedInUser.id)\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({pointsScore: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n  openPopover(event) {\r\n    this.setState({\r\n      popoverOpen: true,\r\n      anchorEl: event.target\r\n    })\r\n  }\r\n\r\n  closePopover() {\r\n    this.setState({popoverOpen: false})\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('accessToken')\r\n    window.location = conf.hostUri\r\n  }\r\n\r\n  render() {\r\n    const {t, loggedInUser} = this.props\r\n\r\n    if (!loggedInUser) {\r\n      return <div/>\r\n    }\r\n    return (\r\n      <>\r\n        <div className='userLoggedInfo' onClick={this.openPopover.bind(this)}>\r\n          <img src={loggedInUser.profile_image_url} width={32} className='profileImage'/>\r\n        </div>\r\n        <Popover\r\n          open={this.state.popoverOpen}\r\n          onClose={this.closePopover.bind(this)}\r\n          anchorEl={this.state.anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <div className='userLoggedInfoExpanded'>\r\n            <img src={loggedInUser.profile_image_url} width={45} className='profileImage'/>\r\n            {loggedInUser.display_name}\r\n          </div>\r\n          <div className='pointsScoreDisplay'>\r\n            {this.state.pointsScore && <div>{formatPoints(\r\n              this.state.pointsScore.points,\r\n              this.state.pointsScore.currencyNameSingular,\r\n              this.state.pointsScore.currencyNamePlural\r\n            )}</div>}\r\n          </div>\r\n          <div className='logoutButton'>\r\n            <Button onClick={this.logout.bind(this)}>\r\n              <ExitToAppIcon/>\r\n              {t('LOGOUT')}\r\n            </Button>\r\n          </div>\r\n        </Popover>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('UserLoggedInfo')(UserLoggedInfo)","import React from 'react'\r\n\r\n\r\nclass BotSettingsPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Bot Settings\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BotSettingsPage","import React from 'react'\r\nimport {translate} from 'react-translate'\r\n\r\n\r\nconst InsufficientPermission = ({t}) => (\r\n  <div>\r\n    {t('INSUFFICIENT_PERMISSIONS')}\r\n  </div>\r\n)\r\n\r\nexport default translate('InsufficientPermissions')(InsufficientPermission)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\n\r\n\r\nconst LoggedInAsAdministrator = ({t}) => (\r\n  <div>\r\n    {t('LOGGED_IN_AS_ADMINISTRATOR')}\r\n  </div>\r\n)\r\n\r\nexport default translate('LoggedInAsAdministrator')(LoggedInAsAdministrator)","import React from 'react'\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button} from '@material-ui/core'\r\nimport {translate} from 'react-translate'\r\nimport {deleteCustomCommand} from '../../requests/requests'\r\nimport queryString from 'query-string'\r\n\r\n\r\nclass DeleteCustomCommandDialog extends React.Component {\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleDelete() {\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      deleteCustomCommand(this.props.customCommandId, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.props.setOpen(false)\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={this.handleClose.bind(this)}\r\n      >\r\n        <DialogTitle>{t('TITLE')}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {t('DELETION_WARNING')}\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose.bind(this)} color='secondary'>{t('CANCEL')}</Button>\r\n            <Button onClick={this.handleDelete.bind(this)} color='error'>{t('DELETE')}</Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('DeleteCustomCommandDialog')(DeleteCustomCommandDialog)","import React from 'react'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Snackbar,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport {translate} from 'react-translate'\r\nimport {Select, Input, Checkbox} from 'antd'\r\nimport {addCustomCommand} from '../../requests/requests'\r\nimport queryString from 'query-string'\r\n\r\n\r\nclass AddCustomCommandDialog extends React.Component {\r\n\r\n  state = {\r\n    customCommand: {\r\n      commandHandles: [],\r\n      response: '',\r\n      showTwitchHandle: true\r\n    },\r\n    snackbarOpen: false\r\n  }\r\n\r\n  handleCommandHandlesChange(commandHandlesValue) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.commandHandles = commandHandlesValue.map(value => value[0] === '!' ? value : '!' + value)\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleSubmit() {\r\n    const modifiedCustomCommand = {...this.state.customCommand}\r\n    modifiedCustomCommand.commandHandles = modifiedCustomCommand.commandHandles.map(\r\n      commandHandle => commandHandle.substr(1, commandHandle.length)\r\n    )\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      addCustomCommand(modifiedCustomCommand, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.handleClose()\r\n            this.openSuccessSnackbar()\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  handleResponseChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.response = event.target.value\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleShowTwitchHandleChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.showTwitchHandle = event.target.checked\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({snackbarOpen: false})\r\n  }\r\n\r\n  openSuccessSnackbar() {\r\n    this.setState({snackbarOpen: true})\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose.bind(this)}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span>{t('ADDED_CUSTOM_COMMAND_SUCCESSFULLY')}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleSnackbarClose.bind(this)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose.bind(this)}\r\n        >\r\n          <DialogTitle>{t('TITLE')}</DialogTitle>\r\n          <DialogContent>\r\n            <Select\r\n              mode='tags'\r\n              style={{width: '100%', margin: '6px 0'}}\r\n              placeholder={t('COMMAND_HANDLES')}\r\n              onChange={this.handleCommandHandlesChange.bind(this)}\r\n              tokenSeparators={[',', ' ']}\r\n              value={this.state.customCommand.commandHandles}\r\n            >\r\n            </Select>\r\n            <Input.TextArea\r\n              placeholder={t('RESPONSE')}\r\n              rows={3}\r\n              style={{margin: '6px 0'}}\r\n              onChange={this.handleResponseChange.bind(this)}\r\n            />\r\n            <Checkbox\r\n              checked={this.state.customCommand.showTwitchHandle}\r\n              onChange={this.handleShowTwitchHandleChange.bind(this)}\r\n              style={{margin: '6px 0'}}\r\n            >\r\n              {t('SHOW_TWITCH_HANDLE')}\r\n            </Checkbox>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose.bind(this)}>{t('CANCEL')}</Button>\r\n              <Button onClick={this.handleSubmit.bind(this)} color='primary'>{t('ADD_CUSTOM_COMMAND')}</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('AddCustomCommandDialog')(AddCustomCommandDialog)","import React from 'react'\r\nimport {translate} from 'react-translate'\r\nimport {updateCustomCommand} from '../../requests/requests'\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Snackbar} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport {Checkbox, Input, Select} from 'antd'\r\nimport isEqual from 'lodash.isequal'\r\nimport queryString from 'query-string'\r\n\r\n\r\nclass EditCustomCommandDialog extends React.Component {\r\n\r\n  state = {\r\n    customCommand: {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!isEqual(prevProps, this.props) && this.props.customCommand && this.props.customCommand.commandHandles) {\r\n      const customCommand = {...this.props.customCommand}\r\n      customCommand.commandHandles = customCommand.commandHandles.map(commandHandle => '!' + commandHandle)\r\n      this.setState({customCommand})\r\n    }\r\n  }\r\n\r\n  handleCommandHandlesChange(commandHandlesValue) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.commandHandles = commandHandlesValue.map(value => value[0] === '!' ? value : '!' + value)\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.setOpen(false)\r\n  }\r\n\r\n  handleSubmit() {\r\n    const modifiedCustomCommand = {...this.state.customCommand}\r\n    modifiedCustomCommand.commandHandles = modifiedCustomCommand.commandHandles.map(\r\n      commandHandle => commandHandle.substr(1, commandHandle.length)\r\n    )\r\n    const parsed = queryString.parse(window.location.hash)\r\n    let accessToken = parsed.access_token\r\n    if (!accessToken) {\r\n      accessToken = localStorage.getItem('accessToken')\r\n    }\r\n    if (accessToken) {\r\n      localStorage.setItem('accessToken', accessToken)\r\n      console.log('accessToken', accessToken)\r\n      updateCustomCommand(modifiedCustomCommand, accessToken)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.handleClose()\r\n            this.openSuccessSnackbar()\r\n            this.props.reload()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  handleResponseChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.response = event.target.value\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleShowTwitchHandleChange(event) {\r\n    const customCommand = {...this.state.customCommand}\r\n    customCommand.showTwitchHandle = event.target.checked\r\n    this.setState({customCommand})\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({snackbarOpen: false})\r\n  }\r\n\r\n  openSuccessSnackbar() {\r\n    this.setState({snackbarOpen: true})\r\n  }\r\n\r\n  render() {\r\n    const {t, open} = this.props\r\n\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose.bind(this)}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span>{t('EDITED_CUSTOM_COMMAND_SUCCESSFULLY')}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleSnackbarClose.bind(this)}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose.bind(this)}\r\n        >\r\n          <DialogTitle>{t('TITLE')}</DialogTitle>\r\n          <DialogContent>\r\n            <Select\r\n              mode='tags'\r\n              style={{width: '100%', margin: '6px 0'}}\r\n              placeholder={t('COMMAND_HANDLES')}\r\n              onChange={this.handleCommandHandlesChange.bind(this)}\r\n              tokenSeparators={[',', ' ']}\r\n              value={this.state.customCommand.commandHandles}\r\n            >\r\n            </Select>\r\n            <Input.TextArea\r\n              value={this.state.customCommand.response}\r\n              placeholder={t('RESPONSE')}\r\n              rows={3}\r\n              style={{margin: '6px 0'}}\r\n              onChange={this.handleResponseChange.bind(this)}\r\n            />\r\n            <Checkbox\r\n              checked={this.state.customCommand.showTwitchHandle}\r\n              onChange={this.handleShowTwitchHandleChange.bind(this)}\r\n              style={{margin: '6px 0'}}\r\n            >\r\n              {t('SHOW_TWITCH_HANDLE')}\r\n            </Checkbox>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose.bind(this)}>{t('CANCEL')}</Button>\r\n              <Button onClick={this.handleSubmit.bind(this)} color='primary'>{t('ADD_CUSTOM_COMMAND')}</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('EditCustomCommandDialog')(EditCustomCommandDialog)","import React from 'react'\r\nimport {getAllCustomCommands} from '../../requests/requests'\r\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow, Button} from '@material-ui/core'\r\nimport numeral from 'numeral'\r\nimport {translate} from 'react-translate'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPen, faTrash, faPlusCircle, faCheck} from '@fortawesome/free-solid-svg-icons'\r\nimport './CustomCommandsPage.scss'\r\nimport DeleteCustomCommandDialog from './DeleteCustomCommandDialog'\r\nimport AddCustomCommandDialog from './AddCustomCommandDialog'\r\nimport EditCustomCommandDialog from './EditCustomCommandDialog'\r\n\r\n\r\nclass CustomCommandsPage extends React.Component {\r\n\r\n  state = {\r\n    customCommands: [],\r\n    customCommandToEdit: {},\r\n    deleteDialogOpen: false,\r\n    addDialogOpen: false,\r\n    editDialogOpen: false,\r\n    customCommandId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reload()\r\n  }\r\n\r\n  reload() {\r\n    getAllCustomCommands()\r\n      .then(res => {\r\n        if (res.data) {\r\n          this.setState({customCommands: res.data})\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  editCustomCommand(id) {\r\n    const customCommand = this.state.customCommands.find(customCommand => customCommand._id === id)\r\n    if (customCommand) {\r\n      this.setState({\r\n        customCommandToEdit: customCommand,\r\n        editDialogOpen: true\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteCustomCommand(customCommandId) {\r\n    this.setState({\r\n      deleteDialogOpen: true,\r\n      customCommandId\r\n    })\r\n  }\r\n\r\n  setDeleteDialogOpen = deleteDialogOpen => this.setState({deleteDialogOpen})\r\n\r\n  setAddDialogOpen = addDialogOpen => this.setState({addDialogOpen})\r\n\r\n  setEditDialogOpen = editDialogOpen => this.setState({editDialogOpen})\r\n\r\n  render() {\r\n    const {t} = this.props\r\n\r\n    return (\r\n      <>\r\n        <AddCustomCommandDialog\r\n          open={this.state.addDialogOpen}\r\n          setOpen={this.setAddDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n        />\r\n        <EditCustomCommandDialog\r\n          customCommand={this.state.customCommandToEdit}\r\n          open={this.state.editDialogOpen}\r\n          setOpen={this.setEditDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n        />\r\n        <DeleteCustomCommandDialog\r\n          open={this.state.deleteDialogOpen}\r\n          setOpen={this.setDeleteDialogOpen.bind(this)}\r\n          reload={this.reload.bind(this)}\r\n          customCommandId={this.state.customCommandId}\r\n        />\r\n        <Button variant='contained' color='primary' style={{marginBottom: 15}}\r\n                onClick={() => this.setAddDialogOpen(true)}>\r\n          <span className='addCustomCommandButtonIcon'><FontAwesomeIcon icon={faPlusCircle}/></span>\r\n          {t('ADD_CUSTOM_COMMAND')}\r\n        </Button>\r\n        <div>\r\n          <Paper>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{t('COMMAND_HANDLES')}</TableCell>\r\n                  <TableCell>{t('RESPONSE')}</TableCell>\r\n                  <TableCell>{t('SHOW_TWITCH_HANDLE')}</TableCell>\r\n                  <TableCell align='right'/>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  this.state.customCommands.map(customCommand => (\r\n                    <TableRow key={customCommand._id}>\r\n                      <TableCell>\r\n                        {customCommand.commandHandles.map(commandHandle => `!${commandHandle}`).join(', ')}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {customCommand.response}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {customCommand.showTwitchHandle &&\r\n                        <span className='showTwitchHandleIcon'><FontAwesomeIcon icon={faCheck}/></span>}\r\n                      </TableCell>\r\n                      <TableCell align='right'>\r\n                        <div className='actionItems'>\r\n                          <div className='editIcon' onClick={() => this.editCustomCommand(customCommand._id)}>\r\n                            <FontAwesomeIcon icon={faPen} size='md'/>\r\n                          </div>\r\n                          <div className='deleteIcon' onClick={() => this.deleteCustomCommand(customCommand._id)}>\r\n                            <FontAwesomeIcon icon={faTrash} size='md'/>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate('CustomCommandsPage')(CustomCommandsPage)","import React from 'react'\r\n\r\n\r\nexport default React.createContext()","import React from 'react'\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Toolbar,\r\n  IconButton,\r\n  Divider,\r\n  ListItemIcon,\r\n  Hidden\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\r\nimport {translate} from 'react-translate'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faRobot} from '@fortawesome/free-solid-svg-icons'\r\nimport PointsLeaderboard from './leaderboards/PointsLeaderboard'\r\nimport DonationLeaderboard from './leaderboards/DonationLeaderboard'\r\nimport BitsLeaderboard from './leaderboards/BitsLeaderboard'\r\nimport LoginButton from './Login/LoginButton'\r\nimport UserLoggedInfo from './Login/UserLoggedInfo'\r\nimport BotSettingsPage from './Administration/BotSettingsPage'\r\nimport InsufficientPermission from './InsufficientPermissions'\r\nimport LoggedInAsAdministrator from './LoggedInAsAdministrator'\r\nimport CustomCommandsPage from './Administration/CustomCommandsPage'\r\nimport PermissionsContext from '../context/PermissionsContext'\r\nimport './Page.scss'\r\n\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    zIndex: 4\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '100%',\r\n    },\r\n    textColor: 'white',\r\n    zIndex: 5\r\n  },\r\n  menuButton: {\r\n    marginRight: 5,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: 10\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  multiListItemIcon: {\r\n    minWidth: 0\r\n  }\r\n}))\r\n\r\nconst Page = ({t, selectPage, selectedPage, loggedInUser}) => {\r\n\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer =\r\n    <div>\r\n      <div className={classes.toolbar}/>\r\n      <List subheader={t('LEADERBOARDS')}>\r\n        <ListItem button key='POINTS_LEADERBOARD' onClick={() => selectPage('POINTS_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><StarIcon/></ListItemIcon>\r\n          <ListItemText primary={t('POINTS_LEADERBOARD')}/>\r\n        </ListItem>\r\n        <ListItem button key='DONATION_LEADERBOARD' onClick={() => selectPage('DONATION_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><AttachMoneyIcon/></ListItemIcon>\r\n          <ListItemText primary={t('DONATION_LEADERBOARD')}/>\r\n        </ListItem>\r\n        <ListItem button key='BITS_LEADERBOARD' onClick={() => selectPage('BITS_LEADERBOARD')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}>\r\n            <svg className=\"tw-icon__svg\" width=\"24px\" height=\"24px\" version=\"1.1\" viewBox=\"0 0 20 20\" x=\"0px\"\r\n                 y=\"0px\">\r\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                    d=\"M3 12l7-10 7 10-7 6-7-6zm2.678-.338L10 5.487l4.322 6.173-.85.728L10 11l-3.473 1.39-.849-.729z\"></path>\r\n            </svg>\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('BITS_LEADERBOARD')}/>\r\n        </ListItem>\r\n      </List>\r\n      <Divider/>\r\n      <List subheader={t('ADMINISTRATION')}>\r\n        <ListItem button key='BOT_SETTINGS' onClick={() => selectPage('BOT_SETTINGS')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}>\r\n            <span style={{marginRight: 5}}><FontAwesomeIcon icon={faRobot}/></span>\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('BOT_SETTINGS')}/>\r\n        </ListItem>\r\n        <ListItem button key='CUSTOM_COMMANDS' onClick={() => selectPage('CUSTOM_COMMANDS')}>\r\n          <ListItemIcon className={classes.multiListItemIcon}><SettingsIcon/></ListItemIcon>\r\n          <ListItemText primary={t('CUSTOM_COMMANDS')}/>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n\r\n  return (\r\n    <>\r\n      <AppBar position='fixed' className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color='inherit'>\r\n            <MenuIcon onClick={handleDrawerToggle}/>\r\n          </IconButton>\r\n          <span style={{marginRight: 10}}><img src='leea-emote-128.png' width={32}/></span>\r\n          <h3 className='appTitle'>LeeaChaanBot Dashboard</h3>\r\n          {!loggedInUser && <LoginButton/>}\r\n          {loggedInUser && <UserLoggedInfo loggedInUser={loggedInUser}/>}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n\r\n        <nav className={classes.drawer}>\r\n          <Hidden smUp implementation='css'>\r\n            <Drawer\r\n              // container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation='css'>\r\n            <Drawer\r\n              open\r\n              variant='permanent'\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}/>\r\n          <PermissionsContext.Consumer>\r\n            {hasAdministrationRights => <>\r\n              {\r\n                selectedPage === 'POINTS_LEADERBOARD' && <PointsLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'DONATION_LEADERBOARD' && <DonationLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'BITS_LEADERBOARD' && <BitsLeaderboard/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && loggedInUser && hasAdministrationRights && <BotSettingsPage/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && loggedInUser && !hasAdministrationRights && <InsufficientPermission/>\r\n              }\r\n              {\r\n                selectedPage === 'BOT_SETTINGS' && !loggedInUser && <LoggedInAsAdministrator/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && loggedInUser && hasAdministrationRights && <CustomCommandsPage/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && loggedInUser && !hasAdministrationRights &&\r\n                <InsufficientPermission/>\r\n              }\r\n              {\r\n                selectedPage === 'CUSTOM_COMMANDS' && !loggedInUser && <LoggedInAsAdministrator/>\r\n              }\r\n            </>\r\n            }\r\n          </PermissionsContext.Consumer>\r\n        </main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default translate('Page')(Page)","import React from 'react'\nimport './App.css'\nimport Page from './components/Page'\nimport {TranslatorProvider} from 'react-translate'\nimport translations from './conf/translations'\nimport queryString from 'query-string'\nimport {currentUserInfo, hasAdministrationRights} from './requests/requests'\nimport PermissionsContext from './context/PermissionsContext'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      locale: 'en',\n      selectedPage: 'POINTS_LEADERBOARD',\n      loggedInUser: null,\n      hasAdministrationRights: false\n    }\n  }\n\n  componentDidMount() {\n    const parsed = queryString.parse(window.location.hash)\n    let accessToken = parsed.access_token\n    if (!accessToken) {\n      accessToken = localStorage.getItem('accessToken')\n    }\n    if (accessToken) {\n      localStorage.setItem('accessToken', accessToken)\n      currentUserInfo(accessToken)\n        .then(res => {\n          if (res.data && res.data.data && res.data.data.length > 0) {\n            this.setState({loggedInUser: res.data.data[0]})\n          } else {\n            localStorage.removeItem('accessToken')\n          }\n        })\n        .catch(err => localStorage.removeItem('accessToken'))\n\n      hasAdministrationRights(accessToken)\n        .then(res => {\n          if (res.data) {\n            this.setState({hasAdministrationRights: res.data.hasRights})\n          }\n        })\n    }\n  }\n\n  selectPage = selectedPage => this.setState({selectedPage})\n\n  render() {\n    console.log(this.state.loggedInUser)\n    return (\n      <TranslatorProvider translations={translations[this.state.locale]}>\n        <PermissionsContext.Provider value={this.state.hasAdministrationRights}>\n          <Page selectedPage={this.state.selectedPage} selectPage={this.selectPage.bind(this)}\n                loggedInUser={this.state.loggedInUser}/>\n        </PermissionsContext.Provider>\n      </TranslatorProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}